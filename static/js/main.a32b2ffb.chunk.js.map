{"version":3,"sources":["components/covid.svg","components/population.txt","components/navbar.jsx","components/Display.jsx","components/content.jsx","components/Diagram.jsx","App.js","index.js"],"names":["module","exports","NavBar","className","style","width","height","src","covid","alt","value","this","props","selectedOption","onChange","e","onSelected","target","data","map","obj","key","country","text","Component","UserDisplay","Fragment","item","confirmed","deaths","recovered","active","Content","backgroundColor","scope","Display","Diagram","maxWidth","photoURL","filter","population","error","chartType","loader","parseInt","options","title","rootProps","renderJSX","App","handleSelect","val","setState","fetch","myTxt","then","response","filteredData","split","str","includes","console","log","length","splitedObj","state","isLoaded","date","Date","setDate","getDate","month","getMonth","monthPaddid","day","dayPadded","yesterday","getFullYear","replace","Axios","get","FileName","arrObj","row","Object","assign","splice","json","items","index","some","i","findIndex","push","sort","a","b","x","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a32b2ffb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/covid.8dda43fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/population.205e9daa.txt\";","import React, { Component } from 'react';\r\n//import Select from \"react-select\"\r\nimport covid from \"./covid.svg\"\r\n\r\nclass NavBar extends Component {\r\n\r\n    render() { \r\n        return (\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <div className=\"col-sm-1\">\r\n                    <img style={{width:\"30px\", height:\"30px\"}}  src={covid} alt=\"icon\"/>\r\n                </div>\r\n                \r\n                \r\n                <div className=\"col-sm-3\">\r\n                    <span className=\"navbar-brand mb-0 \">Select country:</span > \r\n                    <select value={this.props.selectedOption} onChange={(e)=>this.props.onSelected(e.target.value)}>\r\n                        <option>no selected</option>\r\n                        {this.props.data.map((obj) => <option key={obj.country}>{obj.country}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-sm-8 text-center\">\r\n                    <h1 className=\"navbar-brand mb-0 \">COVID-19</h1>\r\n                    <h3 className=\"navbar-brand mb-0 \">{this.props.text}  </h3>   \r\n                </div>\r\n                   \r\n            </nav>\r\n          );\r\n    }\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass UserDisplay extends Component {\r\n  \r\n    render() { \r\n        return (\r\n            <React.Fragment>\r\n                <tr className=\"text-center\">\r\n                    <td className=\"text-left\">{this.props.item.country}</td>\r\n                    <td >{this.props.item.confirmed}</td>\r\n                    <td >{this.props.item.deaths}</td>\r\n                    <td >{this.props.item.recovered}</td>\r\n                    <td >{this.props.item.active}</td>\r\n                </tr>              \r\n            </React.Fragment>         \r\n        );\r\n    }\r\n}\r\n \r\nexport default UserDisplay;","import React, { Component } from 'react';\r\nimport Display from \"./Display\"\r\n\r\n\r\nclass Content extends Component {\r\n   \r\n    render() { \r\n        return (\r\n            <div className=\"row shadow p-3 bg-light\">\r\n                <div className=\"table-responsive-sm \">\r\n                <table className=\"table table-hover table-bordered m-2\">\r\n                    <thead style={{backgroundColor: \"#c4cccf\"}}>\r\n                        <tr className=\"text-center\">\r\n                            <th className=\"text-left\" scope=\"col\">country</th>\r\n                            <th scope=\"col\">confirmed</th>\r\n                            <th scope=\"col\">deaths</th>\r\n                            <th scope=\"col\">recovered</th>\r\n                            <th scope=\"col\">active</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                         {this.props.data.map((obj)=><Display key={obj.country} item={obj}/>)\r\n                         }\r\n                    </tbody>\r\n                </table>\r\n             </div> \r\n               \r\n            </div>\r\n            );\r\n    }\r\n}\r\n \r\nexport default Content;","import React, {Component } from 'react';\r\nimport Chart from \"react-google-charts\";\r\n\r\nclass Diagram extends Component {\r\n\r\n    renderJSX(){\r\n        return(\r\n            <div className=\"text-center\">\r\n                <img style={{maxWidth: \"100%\" , height: \"auto\" }} className=\"img-fluid p-2 m-2\" src={this.props.photoURL} alt=\"random photo\"/>\r\n            </div>\r\n        )          \r\n    }\r\n    confirmed(){\r\n        const filteredData=this.props.data.filter((obj)=>obj.country===this.props.country)\r\n        return filteredData.map(obj=>obj.confirmed);\r\n    }\r\n    active(){\r\n        const filteredData=this.props.data.filter((obj)=>obj.country===this.props.country)\r\n        return filteredData.map(obj=>obj.active);\r\n    }\r\n    recovered(){\r\n        const filteredData=this.props.data.filter((obj)=>obj.country===this.props.country)\r\n        return filteredData.map(obj=>obj.recovered);\r\n    }\r\n    deaths(){\r\n        const filteredData=this.props.data.filter((obj)=>obj.country===this.props.country)\r\n        return filteredData.map(obj=>obj.deaths);\r\n    }\r\n    \r\n    render() { \r\n       // console.log(\"adat=\"+this.confirmed());\r\n        const {population,country,error}=this.props;\r\n        return (\r\n            <div className=\"text-center\">            \r\n                  {(population===0 || population===null ) ? error : \r\n                            <Chart\r\n                                width={'500px'}\r\n                                height={'300px'}\r\n                                chartType=\"PieChart\"\r\n                                loader={<div>Loading Chart</div>}\r\n                                data={[\r\n                                    ['population', 'splitting'],\r\n                                    ['Recovered',parseInt(this.recovered())],\r\n                                    ['Active',parseInt(this.active())],\r\n                                    ['Deaths',parseInt(this.deaths())]\r\n                                ]}\r\n                                options={{\r\n                                    title: country+\" -confirmed:\"+this.confirmed(),\r\n                                }}\r\n                                rootProps={{ 'data-testid': '1' }}\r\n                            />                                           \r\n                 }\r\n                 {(population===0 || population===null ) ? this.renderJSX() : \r\n                            <Chart\r\n                                width={'500px'}\r\n                                height={'300px'}\r\n                                chartType=\"PieChart\"\r\n                                loader={<div>Loading Chart</div>}\r\n                                data={[\r\n                                    ['population', 'splitting'],\r\n                                    ['Healthy', parseInt(population)-parseInt(this.confirmed())],\r\n                                    ['Confirmed',parseInt(this.confirmed())]\r\n                                ]}\r\n                                options={{\r\n                                    title: country+\" -confirmed:\"+this.confirmed(),\r\n                                }}\r\n                                rootProps={{ 'data-testid': '1' }}\r\n                            />                                           \r\n                 }               \r\n            </div>           \r\n          );\r\n    }\r\n}\r\n \r\nexport default Diagram","import React, { Component } from 'react';\r\nimport NavBar from \"./components/navbar\"\r\nimport Content from \"./components/content\"\r\nimport Diagram from \"./components/Diagram\"\r\nimport Axios from \"axios\"\r\nimport  \"../node_modules/bootstrap/dist/css/bootstrap.css\"\r\nimport \"./tableStyle.css\"\r\nimport myTxt from \"./components/population.txt\"\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n       error:null,\r\n       isLoaded:false,\r\n       data:[],\r\n       date:null,\r\n       selectedOption: null,\r\n       population:null,\r\n       photoURL:\"https://picsum.photos/500\"\r\n      }\r\n}\r\n    \r\nFileName(){\r\n    const URL=\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/_DATE_.csv\";\r\n    const date=new Date()//mindig az aktualis datumal jon letre\r\n    date.setDate(date.getDate()-2)//a tegnapi datum kell nekunk mindig\r\n    const month=date.getMonth()+1   //mert a januarnak 0 felel meg\r\n    const monthPaddid=month<10 ?  `0${month}` : month;\r\n    const day=date.getDate();\r\n    const dayPadded=day<10 ? `0${day}` : day;\r\n    const yesterday= `${monthPaddid}-${dayPadded}-${date.getFullYear()}`;\r\n    //console.log(\"tegnap=\"+yesterday)\r\n    this.setState({date:yesterday})\r\n    return URL.replace(\"_DATE_\",yesterday);            \r\n}\r\n\r\ncomponentDidMount(){\r\n    Axios.get(this.FileName())\r\n       .then((response) =>{\r\n            const arr=response.data.split(\"\\n\")\r\n            const arrObj=arr.map(row=> Object.assign({}, row.split(\",\")))\r\n            console.log(arrObj[0])\r\n            arrObj.splice(0,1);//a fejlec nem kell\r\n            console.log(arrObj[0])\r\n            let json = {\r\n                items: []\r\n            };             \r\n            arrObj.map((item,index)=> {  \r\n               if( json.items.some(obj=> obj.country ===item[3])){\r\n                    //console.log(\"mar van\");\r\n                    let i=json.items.findIndex(e=>e.country===item[3]);\r\n                    //console.log(item[3]+\"mar van:\"+i+\"-\"+(json.items[i].confirmed+parseInt(item[7])));\r\n                    json.items[i].confirmed=parseInt(json.items[i].confirmed)+parseInt(item[7]);\r\n                    json.items[i].deaths=parseInt(json.items[i].deaths)+parseInt(item[8]);\r\n                    json.items[i].recovered=parseInt(json.items[i].recovered)+parseInt(item[9]);\r\n                    json.items[i].active=item[10] ? parseInt(json.items[i].active)+parseInt(item[10]) :json.items[i].active;\r\n               }else\r\n                   json.items.push({ \r\n                        \"country\"  : item[3],\r\n                        \"confirmed\":item[7],\r\n                        \"deaths\":item[8],\r\n                        \"recovered\":item[9],\r\n                        \"active\"  : item[10]\r\n                    })\r\n                });\r\n            //rendezes:\r\n            json.items.sort((a,b) => (a.country > b.country) ? 1 : ((b.country > a.country) ? -1 : 0)); \r\n            //hibas adatok torlese:\r\n            json.items = json.items.filter(x => x.confirmed>0);\r\n            json.items = json.items.filter(x => x.country!=='\"Korea');\r\n\r\n            this.setState({\r\n                    isLoaded:true,\r\n                    data:json.items,\r\n                    error:null\r\n            })\r\n       })\r\n}\r\nhandleSelect = (val)=> {\r\n  this.setState({selectedOption:val})\r\n  if(val!==\"no selected\"){\r\n    fetch(myTxt)\r\n    .then(response=>response.text())\r\n    .then(\r\n      (text)=>{\r\n        const obj=text.split(\"\\n\")\r\n        const filteredData=obj.filter(str=>str.includes(val))\r\n        console.log(\"filteredData=\"+filteredData.length)\r\n        if(filteredData.length===0) {\r\n          console.log(\"orszag kodozasi hiba\");\r\n          this.setState({population:0,\r\n                         error:\"orszag kodolasi hiba :(\" \r\n          })\r\n        }else{\r\n          const splitedObj=filteredData.map(str=>str.split(\";\"))\r\n          this.setState({population:splitedObj[0][1]})\r\n        }},\r\n      (error)=>{\r\n        this.setState({\r\n          selectedOption:null,\r\n          population:0\r\n        })\r\n      }\r\n      )\r\n  }else\r\n    this.setState({\r\n      selectedOption:null,\r\n      population:0,\r\n      error:null\r\n    })\r\n}\r\n\r\n  render() { \r\n    console.log(this.state.selectedOption+\" render-bol\");\r\n    return (\r\n      <div className=\"container border shadow\">\r\n        <NavBar text={this.state.isLoaded ? \" date: \"+this.state.date  : \"is loading...\" } \r\n                data={this.state.data} \r\n                onSelected={this.handleSelect}\r\n                selectedOption={this.state.selectedOption}/>\r\n        <main  className='row'>\r\n              \r\n              <div className=\"col-sm-5\">\r\n                 <Diagram country={this.state.selectedOption} \r\n                          population={this.state.population} \r\n                          data={this.state.data}\r\n                          photoURL={this.state.photoURL}\r\n                          error={this.state.error}/>\r\n              </div>  \r\n\r\n              <div className=\"col-sm-7\">\r\n                  <Content data={this.state.data} />\r\n              </div>\r\n\r\n        </main>\r\n      </div>\r\n      \r\n      );\r\n  }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}
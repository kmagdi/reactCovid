{"version":3,"sources":["components/covid.svg","components/population.txt","components/navbar.jsx","components/Display.jsx","components/content.jsx","components/Diagram.jsx","App.js","index.js"],"names":["module","exports","NavBar","className","style","width","height","src","covid","alt","this","props","text","value","selectedOption","onChange","e","onSelected","target","data","map","obj","key","country","Component","UserDisplay","Fragment","item","confirmed","deaths","recovered","active","Content","backgroundColor","scope","Display","Diagram","maxWidth","photoURL","filter","population","error","chartType","loader","parseInt","options","title","rootProps","renderJSX","App","handleSelect","val","setState","fetch","myTxt","then","response","filteredData","split","str","includes","console","log","length","splitedObj","state","isLoaded","date","Date","setDate","getDate","month","getMonth","monthPaddid","day","dayPadded","yesterday","getFullYear","replace","Axios","get","FileName","arrObj","row","Object","assign","splice","json","items","index","some","i","findIndex","push","sort","a","b","x","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38cca3c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/covid.e01e1e0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/population.205e9daa.txt\";","import React, { Component } from 'react';\r\n//import Select from \"react-select\"\r\nimport covid from \"./covid.svg\"\r\n\r\nclass NavBar extends Component {\r\n\r\n    render() { \r\n        return (\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <img style={{width:\"30px\", height:\"30px\"}}  src={covid} alt=\"icon\"/>\r\n                <h1 className=\"navbar-brand mb-0 \">COVID-19</h1>\r\n                <h3 className=\"navbar-brand mb-0 \">{this.props.text}  </h3>      \r\n                <div className=\"col-sm-3\">\r\n                    <span className=\"navbar-brand mb-0 \">Select country:</span > \r\n                    <select  value={this.props.selectedOption} onChange={(e)=>this.props.onSelected(e.target.value)}>\r\n                        <option>no selected</option>\r\n                        {this.props.data.map((obj) => <option key={obj.country}>{obj.country}</option>)}\r\n                    </select>\r\n                </div>\r\n            </nav>\r\n          );\r\n    }\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass UserDisplay extends Component {\r\n  \r\n    render() { \r\n        return (\r\n            <React.Fragment>\r\n                <tr className=\"text-center\">\r\n                    <td className=\"text-left\">{this.props.item.country}</td>\r\n                    <td >{this.props.item.confirmed}</td>\r\n                    <td >{this.props.item.deaths}</td>\r\n                    <td >{this.props.item.recovered}</td>\r\n                    <td >{this.props.item.active}</td>\r\n                </tr>              \r\n            </React.Fragment>         \r\n        );\r\n    }\r\n}\r\n \r\nexport default UserDisplay;","import React, { Component } from 'react';\r\nimport Display from \"./Display\"\r\n\r\n\r\nclass Content extends Component {\r\n   \r\n    render() { \r\n        return (\r\n            <div className=\"row shadow p-3 bg-light\">\r\n                <div className=\"table-responsive-sm \">\r\n                <table className=\"table table-hover table-bordered m-2\">\r\n                    <thead style={{backgroundColor: \"#c4cccf\"}}>\r\n                        <tr className=\"text-center\">\r\n                            <th className=\"text-left\" scope=\"col\">country</th>\r\n                            <th scope=\"col\">confirmed</th>\r\n                            <th scope=\"col\">deaths</th>\r\n                            <th scope=\"col\">recovered</th>\r\n                            <th scope=\"col\">active</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                         {this.props.data.map((obj)=><Display key={obj.country} item={obj}/>)\r\n                         }\r\n                    </tbody>\r\n                </table>\r\n             </div> \r\n               \r\n            </div>\r\n            );\r\n    }\r\n}\r\n \r\nexport default Content;","import React, {Component } from 'react';\r\nimport Chart from \"react-google-charts\";\r\n\r\nclass Diagram extends Component {\r\n\r\n    renderJSX(){\r\n        return(\r\n            <div className=\"text-center\">\r\n                <img style={{maxWidth: \"100%\" , height: \"auto\" }} className=\"img-fluid p-2 m-2\" src={this.props.photoURL} alt=\"random photo\"/>\r\n            </div>\r\n        )\r\n            \r\n    }\r\n    confirmed(){\r\n        const filteredData=this.props.data.filter((obj)=>obj.country===this.props.country)\r\n        return filteredData.map(obj=>obj.confirmed);\r\n    }\r\n    active(){\r\n        const filteredData=this.props.data.filter((obj)=>obj.country===this.props.country)\r\n        return filteredData.map(obj=>obj.active);\r\n    }\r\n    recovered(){\r\n        const filteredData=this.props.data.filter((obj)=>obj.country===this.props.country)\r\n        return filteredData.map(obj=>obj.recovered);\r\n    }\r\n    deaths(){\r\n        const filteredData=this.props.data.filter((obj)=>obj.country===this.props.country)\r\n        return filteredData.map(obj=>obj.deaths);\r\n    }\r\n    \r\n    render() { \r\n       // console.log(\"adat=\"+this.confirmed());\r\n        const {population,country,error}=this.props;\r\n        return (\r\n            <div className=\"text-center\">            \r\n                  {(population===0 || population===null ) ? error : \r\n                            <Chart\r\n                                width={'500px'}\r\n                                height={'300px'}\r\n                                chartType=\"PieChart\"\r\n                                loader={<div>Loading Chart</div>}\r\n                                data={[\r\n                                    ['population', 'splitting'],\r\n                                    ['Recovered',parseInt(this.recovered())],\r\n                                    ['Active',parseInt(this.active())],\r\n                                    ['Deaths',parseInt(this.deaths())]\r\n                                ]}\r\n                                options={{\r\n                                    title: country+\" -confirmed:\"+this.confirmed(),\r\n                                }}\r\n                                rootProps={{ 'data-testid': '1' }}\r\n                            />                                           \r\n                 }\r\n                 {(population===0 || population===null ) ? this.renderJSX() : \r\n                            <Chart\r\n                                width={'500px'}\r\n                                height={'300px'}\r\n                                chartType=\"PieChart\"\r\n                                loader={<div>Loading Chart</div>}\r\n                                data={[\r\n                                    ['population', 'splitting'],\r\n                                    ['Healthy', parseInt(population)-parseInt(this.confirmed())],\r\n                                    ['Confirmed',parseInt(this.confirmed())]\r\n                                ]}\r\n                                options={{\r\n                                    title: country+\" -confirmed:\"+this.confirmed(),\r\n                                }}\r\n                                rootProps={{ 'data-testid': '1' }}\r\n                            />                                           \r\n                 }               \r\n            </div>           \r\n          );\r\n    }\r\n}\r\n \r\nexport default Diagram","import React, { Component } from 'react';\nimport NavBar from \"./components/navbar\"\nimport Content from \"./components/content\"\nimport Diagram from \"./components/Diagram\"\nimport Axios from \"axios\"\nimport  \"../node_modules/bootstrap/dist/css/bootstrap.css\"\nimport \"./tableStyle.css\"\nimport myTxt from \"./components/population.txt\"\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n       error:null,\n       isLoaded:false,\n       data:[],\n       date:null,\n       selectedOption: null,\n       population:null,\n       photoURL:\"https://picsum.photos/500\"\n      }\n}\n    \nFileName(){\n    const URL=\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/_DATE_.csv\";\n    const date=new Date()//mindig az aktualis datumal jon letre\n    date.setDate(date.getDate()-2)//a tegnapi datum kell nekunk mindig\n    const month=date.getMonth()+1   //mert a januarnak 0 felel meg\n    const monthPaddid=month<10 ?  `0${month}` : month;\n    const day=date.getDate();\n    const dayPadded=day<10 ? `0${day}` : day;\n    const yesterday= `${monthPaddid}-${dayPadded}-${date.getFullYear()}`;\n    //console.log(\"tegnap=\"+yesterday)\n    this.setState({date:yesterday})\n    return URL.replace(\"_DATE_\",yesterday);            \n}\n\ncomponentDidMount(){\n    Axios.get(this.FileName())\n       .then((response) =>{\n            const arr=response.data.split(\"\\n\")\n            const arrObj=arr.map(row=> Object.assign({}, row.split(\",\")))\n            console.log(arrObj[0])\n            arrObj.splice(0,1);//a fejlec nem kell\n            console.log(arrObj[0])\n            let json = {\n                items: []\n            };             \n            arrObj.map((item,index)=> {  \n               if( json.items.some(obj=> obj.country ===item[3])){\n                    //console.log(\"mar van\");\n                    let i=json.items.findIndex(e=>e.country===item[3]);\n                    //console.log(item[3]+\"mar van:\"+i+\"-\"+(json.items[i].confirmed+parseInt(item[7])));\n                    json.items[i].confirmed=parseInt(json.items[i].confirmed)+parseInt(item[7]);\n                    json.items[i].deaths=parseInt(json.items[i].deaths)+parseInt(item[8]);\n                    json.items[i].recovered=parseInt(json.items[i].recovered)+parseInt(item[9]);\n                    json.items[i].active=item[10] ? parseInt(json.items[i].active)+parseInt(item[10]) :json.items[i].active;\n               }else\n                   json.items.push({ \n                        \"country\"  : item[3],\n                        \"confirmed\":item[7],\n                        \"deaths\":item[8],\n                        \"recovered\":item[9],\n                        \"active\"  : item[10]\n                    })\n                });\n            //rendezes:\n            json.items.sort((a,b) => (a.country > b.country) ? 1 : ((b.country > a.country) ? -1 : 0)); \n            //hibas adatok torlese:\n            json.items = json.items.filter(x => x.confirmed>0);\n            json.items = json.items.filter(x => x.country!=='\"Korea');\n\n            this.setState({\n                    isLoaded:true,\n                    data:json.items,\n                    error:null\n            })\n       })\n}\nhandleSelect = (val)=> {\n  this.setState({selectedOption:val})\n  if(val!==\"no selected\"){\n    fetch(myTxt)\n    .then(response=>response.text())\n    .then(\n      (text)=>{\n        const obj=text.split(\"\\n\")\n        const filteredData=obj.filter(str=>str.includes(val))\n        console.log(\"filteredData=\"+filteredData.length)\n        if(filteredData.length===0) {\n          console.log(\"orszag kodozasi hiba\");\n          this.setState({population:0,\n                         error:\"orszag kodolasi hiba :(\" \n          })\n        }else{\n          const splitedObj=filteredData.map(str=>str.split(\";\"))\n          this.setState({population:splitedObj[0][1]})\n        }},\n      (error)=>{\n        this.setState({\n          selectedOption:null,\n          population:0\n        })\n      }\n      )\n  }else\n    this.setState({\n      selectedOption:null,\n      population:0,\n      error:null\n    })\n}\n\n  render() { \n    console.log(this.state.selectedOption+\" render-bol\");\n    return (\n      <React.Fragment>\n        <NavBar text={this.state.isLoaded ? \" date: \"+this.state.date  : \"is loading...\" } \n                data={this.state.data} \n                onSelected={this.handleSelect}\n                selectedOption={this.state.selectedOption}/>\n        <main className='row'>\n              <div className=\"col-sm-7\">\n                  <Content data={this.state.data} />\n              </div>\n              <div className=\"col-sm-5\">\n                 <Diagram country={this.state.selectedOption} \n                          population={this.state.population} \n                          data={this.state.data}\n                          photoURL={this.state.photoURL}\n                          error={this.state.error}/>\n              </div>   \n        </main>\n      </React.Fragment>\n      \n      );\n  }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n"],"sourceRoot":""}